# DB specific requirements
# - both security lists should allow incoming connections to port 1521 (can use other VCNs cidr or just 0.0.0.0)
# Remote Peering

# Create Standby Region Basic Networking

- name: Create VCN (Standby)
  include_tasks: vcn.yml
  vars:
    region: "{{ standby_region }}"
    network_tag: "{{ standby_network_tag }}"
    vcn_cidr_block: "{{ standby_vcn_cidr_block }}"  

- name: Create DB Security List for Standby
  oci_network_security_list:
    region: "{{ standby_region }}"
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_id }}"
    display_name: "{{ standby_network_tag }}DBSecurityList"
    ingress_security_rules:
    - protocol: "6"
      source: "{{ vcn_cidr_block }}"
      tcp_options:
        destination_port_range:
          min: "1521"
          max: "1521"
    egress_security_rules:
    - protocol: "6"
      destination: "{{ vcn_cidr_block }}"
      tcp_options:
        destination_port_range:
          min: "1521"
          max: "1521"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    standby_db_security_list_id: "{{ result.security_list.id }}"
- lineinfile:
    path: ./vars/networking_ocids.yml
    line: "{{ standby_network_tag }}_db_security_list_id: {{ standby_db_security_list_id }}"


- name: Create public subnet with default values for route table, security list, & DHCP options
  oci_network_subnet:
    region: "{{ standby_region }}"
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_id }}"
    cidr_block: "{{ standby_public_subnet_cidr_block }}"
    display_name: "{{ standby_network_tag }}PublicSubnet"
    prohibit_public_ip_on_vnic: "false"
    dns_label: "{{ standby_network_tag }}Pub"
    security_list_ids:
    - "{{ default_security_list_id }}"
    - "{{ standby_db_security_list_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    public_subnet_id: "{{ result.subnet.id }}"
- lineinfile:
    path: ./vars/networking_ocids.yml
    line: "{{ standby_network_tag }}_public_subnet_id: {{ public_subnet_id }}"

# Prod Security List Changes

- name: Create DB Security List for Prod
  oci_network_security_list:
    region: "{{ region }}"
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ lookup('vars', network_tag + '_vcn_id') }}"
    display_name: "{{ network_tag }}DBSecurityList"
    ingress_security_rules:
    - protocol: "6"
      source: "{{ standby_vcn_cidr_block }}"
      tcp_options:
        destination_port_range:
          min: "1521"
          max: "1521"
    egress_security_rules:
    - protocol: "6"
      destination: "{{ standby_vcn_cidr_block }}"
      tcp_options:
        destination_port_range:
          min: "1521"
          max: "1521"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    prod_db_security_list_id: "{{ result.security_list.id }}"
- lineinfile:
    path: ./vars/networking_ocids.yml
    line: "{{ network_tag }}_db_security_list_id: {{ prod_db_security_list_id }}"

- name: Add DB security list to prod subnet
  oci_network_subnet:
    region: "{{ region }}"
    id: "{{ lookup('vars', network_tag + '_public_subnet_id') }}"
    security_list_ids:
    - "{{ lookup('vars', network_tag + '_default_security_list_id') }}"
    - "{{ prod_db_security_list_id }}"
  register: result
- debug:
    msg: "{{ result }}"
     

# Create Standby Region DRG and RPC

- name: Create standby drg
  oci_network_drg:
    region: "{{ standby_region }}"
    display_name: "{{ standby_network_tag }}DRG"
    compartment_id: "{{ compartment_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    standby_drg_id: "{{ result.drg.id }}"
- lineinfile:
    path: ./vars/networking_ocids.yml
    line: "{{ standby_network_tag }}_drg_id: {{ standby_drg_id }}"

- name: Create standby drg_attachment 
  oci_network_drg_attachment:
    region: "{{ standby_region }}"
    drg_id: "{{ standby_drg_id }}"
    display_name: "{{ standby_network_tag }}DRGAttachment"
    compartment_id: "{{ compartment_id }}"
    network_details:
      type: VCN
      id: "{{ vcn_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    standby_drg_attachment_id: "{{ result.drg_attachment.id }}"
- lineinfile:
    path: ./vars/networking_ocids.yml
    line: "{{ standby_network_tag }}_drg_attachment_id: {{ standby_drg_attachment_id }}"

- name: Add drg route to standby default route table
  oci_network_route_table:
    region: "{{ standby_region }}"
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_id }}"
    id: "{{ default_route_table_id }}"
    route_rules:
    - destination_type: CIDR_BLOCK
      destination: "{{ vcn_cidr_block }}"
      network_entity_id: "{{ standby_drg_id }}"
  register: result
- debug:
    msg: "{{ result }}"

- name: Create standby remote peering connection
  oci_network_remote_peering_connection:
    region: "{{ standby_region }}"
    compartment_id: "{{ compartment_id }}"
    display_name: "{{ standby_network_tag }}RPC"
    drg_id: "{{ standby_drg_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    standby_rpc_id: "{{ result.remote_peering_connection.id }}"
- lineinfile:
    path: ./vars/networking_ocids.yml
    line: "{{ standby_network_tag }}_rpc_id: {{ standby_rpc_id }}"   

# Create Primary Region DRG and RPC

- name: Create prod drg
  oci_network_drg:
    region: "{{ region }}"
    display_name: "{{ network_tag }}DRG"
    compartment_id: "{{ compartment_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    prod_drg_id: "{{ result.drg.id }}"
- lineinfile:
    path: ./vars/networking_ocids.yml
    line: "{{ network_tag }}_drg_id: {{ prod_drg_id }}"

- name: Create prod drg_attachment 
  oci_network_drg_attachment:
    region: "{{ region }}"
    drg_id: "{{ prod_drg_id }}"
    display_name: "{{ network_tag }}DRGAttachment"
    compartment_id: "{{ compartment_id }}"
    network_details:
      type: VCN
      id: "{{ lookup('vars', network_tag + '_vcn_id') }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    prod_drg_attachment_id: "{{ result.drg_attachment.id }}"
- lineinfile:
    path: ./vars/networking_ocids.yml
    line: "{{ network_tag }}_drg_attachment_id: {{ prod_drg_attachment_id }}"

- name: Add drg route to prod default route table
  oci_network_route_table:
    region: "{{ region }}"
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ lookup('vars', network_tag + '_vcn_id') }}"
    id: "{{ lookup('vars', network_tag + '_default_route_table_id') }}"
    route_rules:
    - destination_type: CIDR_BLOCK
      destination: "{{ standby_vcn_cidr_block }}"
      network_entity_id: "{{ prod_drg_id }}"
  register: result
- debug:
    msg: "{{ result }}"

- name: Create prod remote peering connection
  oci_network_remote_peering_connection:
    region: "{{ region }}"
    compartment_id: "{{ compartment_id }}"
    display_name: "{{ network_tag }}RPC"
    drg_id: "{{ prod_drg_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    prod_rpc_id: "{{ result.remote_peering_connection.id }}"
- lineinfile:
    path: ./vars/networking_ocids.yml
    line: "{{ network_tag }}_rpc_id: {{ prod_rpc_id }}"

# Create remote peering connection

- name: Perform action connect on remote_peering_connection
  oci_network_remote_peering_connection_actions:
    region: "{{ standby_region }}"
    remote_peering_connection_id: "{{ standby_rpc_id }}"
    peer_id: "{{ prod_rpc_id }}"
    peer_region_name: "{{ region }}"
    action: connect
  register: result
- debug:
    msg: "{{ result }}"





