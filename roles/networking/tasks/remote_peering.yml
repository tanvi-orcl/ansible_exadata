# DB specific requirements
# - both security lists should allow incoming connections to port 1521 (can use other VCNs cidr or just 0.0.0.0)
# Remote Peering

# Create Standby Region Basic Networking

- name: Standby Networking
  include_vars: standby_networking.yml

- name: Create VCN and Subnets for Exadata (Standby)
  include_tasks: vcn_subnets.yml
  vars:
    region: "{{ standby_region }}"
    network_tag: "{{ standby_network_tag }}"
    vcn_cidr_block: "{{ standby_vcn_cidr_block }}" 
    public_subnet_cidr_block: "{{ standby_public_subnet_cidr_block }}"   
    private_subnet_cidr_block: "{{ standby_private_subnet_cidr_block }}"  

- name: Add Networking for Public Subnet (Standby)
  include_tasks: public_subnet_networking.yml
  vars:
    region: "{{ standby_region }}"
    network_tag: "{{ standby_network_tag }}"
    vcn_cidr_block: "{{ standby_vcn_cidr_block }}" 
    public_subnet_cidr_block: "{{ standby_public_subnet_cidr_block }}"   
    private_subnet_cidr_block: "{{ standby_private_subnet_cidr_block }}"  

# Create Standby Region DRG

- name: Create standby drg
  oci_network_drg:
    region: "{{ standby_region }}"
    display_name: "{{ standby_network_tag }}DRG"
    compartment_id: "{{ compartment_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    standby_drg_id: "{{ result.drg.id }}"

- name: Create standby drg_attachment 
  oci_network_drg_attachment:
    region: "{{ standby_region }}"
    drg_id: "{{ standby_drg_id }}"
    compartment_id: "{{ compartment_id }}"
    network_details:
      type: VCN
      id: "{{ vcn_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    standby_drg_attachment_id: "{{ result.drg_attachment.id }}"

- name: Add drg route to standby default route table
  oci_network_route_table:
    region: "{{ standby_region }}"
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_id }}"
    id: "{{ default_route_table_id }}"
    route_rules:
    - destination_type: CIDR_BLOCK
      # destination: "{{ vcn_cidr_block }}" "10.1.0.0/16" 
      destination: "10.1.0.0/16" 
      network_entity_id: "{{ standby_drg_id }}"
  register: result
- debug:
    msg: "{{ result }}"

# Create Primary Region DRG

- name: Prod DRG
  include_vars: prod_networking.yml

- name: Create prod drg
  oci_network_drg:
    region: "{{ region }}"
    display_name: "{{ network_tag }}DRG"
    compartment_id: "{{ compartment_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    prod_drg_id: "{{ result.drg.id }}"

- name: Create prod drg_attachment 
  oci_network_drg_attachment:
    region: "{{ region }}"
    drg_id: "{{ prod_drg_id }}"
    compartment_id: "{{ compartment_id }}"
    network_details:
      type: VCN
      id: "{{ prod_vcn_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    prod_drg_attachment_id: "{{ result.drg_attachment.id }}"

- name: Add drg route to prod default route table
  oci_network_route_table:
    region: "{{ region }}"
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ prod_vcn_id }}"
    id: "{{ prod_default_route_table_id }}"
    route_rules:
    - destination_type: CIDR_BLOCK
      destination: "{{ standby_vcn_cidr_block }}"
      network_entity_id: "{{ prod_drg_id }}"
  register: result
- debug:
    msg: "{{ result }}"


# Create remote peering connection

- name: Create standby remote peering connection
  oci_network_remote_peering_connection:
    region: "{{ standby_region }}"
    compartment_id: "{{ compartment_id }}"
    drg_id: "{{ standby_drg_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    standby_rpc_id: "{{ result.remote_peering_connection.id }}"

- name: Create prod remote peering connection and attach to standby
  oci_network_remote_peering_connection:
    region: "{{ region }}"
    compartment_id: "{{ compartment_id }}"
    drg_id: "{{ prod_drg_id }}"
  register: result
- debug:
    msg: "{{ result }}"
- set_fact:
    prod_rpc_id: "{{ result.remote_peering_connection.id }}"

- name: Perform action connect on remote_peering_connection
  oci_network_remote_peering_connection_actions:
    region: "{{ standby_region }}"
    remote_peering_connection_id: "{{ standby_rpc_id }}"
    peer_id: "{{ prod_rpc_id }}"
    peer_region_name: "{{ region }}"
    action: connect