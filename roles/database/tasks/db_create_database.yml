
- name: 'Discover DB Home for Database {{ workload_tag }}{{ db_name }}'
  when: db_home_id is not defined
  include_role:
    name: 'database_home'
    tasks_from: 'db_home_discovery.yml'
- name: 'Assert that db_home_id is defined'
  assert: { that: db_home_id is defined }

# Source is NONE (default)

- name: 'Create {{ workload_tag }}{{ db_name }} database'
  oci_database_database:
    compartment_id: '{{ compartment_id }}'
    database:
      admin_password: '{{ db_admin_password }}'
      character_set: '{{ character_set }}'
      database_software_image_id: '{{ database_software_image_id }}'
      db_backup_config: '{{ db_backup_config }}'
      db_name: '{{ workload_tag }}{{ db_name }}'
      db_workload: '{{ db_workload }}'
      defined_tags: '{{ defined_tags }}'
      freeform_tags: '{{ freeform_tags }}'
      ncharacter_set: '{{ ncharacter_set }}'
      pdb_name: '{{ initial_pdb_name }}'
      tde_wallet_password: '{{ tde_wallet_password }}'
    db_home_id: '{{ db_home_id }}'
    db_version: '{{ db_version }}' 
    key_by: ['db_home_id', 'db_name']
    kms_key_id: '{{ kms_key_id }}' 
    kms_key_version_id: '{{ kms_key_version_id }}' 
    source: '{{ source }}'
  register: 'db_creation_result'
- name: 'DB Creation Output'
  debug:
    msg: '{{ db_creation_result }}'
- set_fact:
    database_id: '{{ db_creation_result.database.id }}'

# TO DO: Create database from backup