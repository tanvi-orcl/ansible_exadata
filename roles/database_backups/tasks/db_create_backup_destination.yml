# Check variable backup_destination_type

- name: 'Check Backup Destination Type is defined.'
  assert:
    that:
      - backup_destination_type is defined
      - backup_destination_type == 'OBJECT_STORE' or backup_destination_type == 'LOCAL' or backup_destination_type == 'RECOVERY_APPLIANCE' or backup_destination_type == 'NFS'
    fail_msg: 'Check to make sure variable backup_destination_type is defined correctly.'


# Create Backup Destination Type NFS
# If mount type is 'SELF_MOUNT', local_mount_point_path should be defined.
# If mount type is 'AUTOMATED_MOUNT', nfs_server and nfs_server_export should be defined.

- block:

  - name: 'Create NFS backup_destination'
    oci_database_backup_destination:
      compartment_id: '{{ compartment_id }}'
      defined_tags: '{{ backup_destination_defined_tags }}'
      display_name: '{{ workload_tag }}NFS'
      freeform_tags: '{{ backup_destination_freeform_tags }}'
      key_by: ['compartment_id', display_name']
      type: '{{ backup_destination_type }}'
      mount_type_details:
        mount_type: '{{ mount_type }}'
        local_mount_point_path: '{{ local_mount_point_path }}'
        nfs_server: '{{ nfs_server }}'
        nfs_server_export: '{{ nfs_server_export }}'
    register: 'backup_destination_create_result'
  - debug:
      msg: '{{ backup_destination_create_result }}'
  - set_fact:
      backup_destination_id: '{{ backup_destination_create_result.backup_destination.id }}'

  when: backup_destination_type == 'NFS'


# Create Backup Destination Type RECOVERY_APPLIANCE

- block:

  - name: 'Create Recovery Applicance backup_destination'
    oci_database_backup_destination:
      compartment_id: '{{ compartment_id }}'
      connection_string: '{{ connection_string }}'
      defined_tags: '{{ backup_destination_defined_tags }}'
      display_name: '{{ workload_tag }}RA'
      freeform_tags: '{{ backup_destination_freeform_tags }}'
      key_by: ['compartment_id', display_name']
      type: '{{ backup_destination_type }}'
      vpc_users: '{{ vpc_users }}'
    register: 'backup_destination_create_result'
  - debug:
      msg: '{{ backup_destination_create_result }}'
  - set_fact:
      backup_destination_id: '{{ backup_destination_create_result.backup_destination.id }}'

  when: backup_destination_type == 'RECOVERY_APPLICANCE'