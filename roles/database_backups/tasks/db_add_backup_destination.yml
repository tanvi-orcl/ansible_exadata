
# Check variable backup_destination_type

- name: 'Check Backup Destination Type is defined.'
  assert:
    that:
      - backup_destination_type is defined
      - backup_destination_type == 'OBJECT_STORE' or backup_destination_type == 'LOCAL' or backup_destination_type == 'RECOVERY_APPLIANCE' or backup_destination_type == 'NFS'
    fail_msg: 'Check to make sure variable backup_destination_type is defined correctly.'

# Discover Database OCID if not defined

- name: 'Database Discovery'
  when: database_id is not defined
  include_role:
    name: 'database'
    tasks_from: 'db_discovery.yml'
- name: 'Assert that database_id is defined'
  assert: { that: database_id is defined }


# Backup Destination for Object Storage or Local Storage

- name: 'Set database backup destination to Object Store or Local'
  when: backup_destination_type == 'OBJECT_STORE' or backup_destination_type == 'LOCAL'
  oci_database_database:
    database_id: '{{ database_id }}'
    db_backup_config:
      backup_destination_details:
      - internet_proxy: '{{ internet_proxy }}'
        type: '{{ backup_destination_type }}'
  register: 'backup_destination_add_result'
- name: 'Backup Destination Output - Object Store or Local'
  debug:
    msg: '{{ backup_destination_add_result }}'


# Check Backup Destination ID for NFS / Recovery Appliance

- name: 'Backup Destination discovery'
  when: (backup_destination_id is not defined) and (backup_destination_type == 'RECOVERY_APPLIANCE' or backup_destination_type == 'NFS')
  include_tasks: 'db_backup_destination_discovery.yml'
- name: 'Assert that backup_destination_id is defined for Recovery Appliance or NFS backups'
  assert: { that: backup_destination_id is defined }

# Backup Destination for NFS

- name: 'Set database backup destination to NFS'
  when: backup_destination_type == 'NFS'
  oci_database_database:
    database_id: '{{ database_id }}'
    db_backup_config:
      backup_destination_details:
      - id: '{{ backup_destination_id }}'
        type: '{{ backup_destination_type }}'
  register: 'backup_destination_add_result'
- name: 'Backup Destination Output - NFS'
  debug:
    msg: '{{ backup_destination_add_result }}'

# Backup Destination for Recovery Appliance

- name: 'Set database backup destination to Recovery Appliance'
  when: backup_destination_type == 'Recovery_Appliance'
  oci_database_database:
    database_id: '{{ database_id }}'
    db_backup_config:
      backup_destination_details:
      - id: '{{ backup_destination_id }}'
        type: '{{ backup_destination_type }}'
        vpc_user: '{{ vpc_user }}'
        vpc_password: '{{ vpc_password }}'
  register: 'backup_destination_add_result'
- name: 'Backup Destination Output - Recovery Appliance'
  debug:
    msg: '{{ backup_destination_add_result }}'



