# TO DO: Figure out if can use the same module for exacc AND exacs. I.e. do we need to specify the backup destination details?
# Commented out if we can use the same module. If can't, need a separate task for object storage/local (without id)


- name: 'Get OCID for {{ workload_tag }}{{ db_name }} DB'
  when: database_id is not defined
  include_role:
    name: 'database'
    tasks_from: 'db_discovery.yml'
- assert: { that: database_id is defined }

- name: 'Enable automatic database backups'
  oci_database_database:
    database_id: '{{ database_id }}'
    db_backup_config:
      auto_backup_enabled: '{{ auto_backup_enabled }}'
      auto_backup_window: '{{ auto_backup_window }}'
      recovery_window_in_days: '{{ recovery_window_in_days }}'
  register: 'enable_auto_backup_result'
- debug:
    msg: '{{ enable_auto_backup_result }}'


# - name: 'Check Exadata Infrastructure variables are defined.'
#   assert:
#     that:
#       - exadata_type is defined
#       - exadata_type == 'exacc' or exadata_type == 'exacs'
#     fail_msg: 'Check to make sure variable exadata_type is defined.'

# - block:      # exadata type is exacc

#   - assert: { that: backup_destination_type is defined }
#   - name: Backup Destination discovery
#     when: (backup_destination_id is not defined) and (backup_destination_type == 'RECOVERY_APPLIANCE' or backup_destination_type == 'NFS')
#     include_tasks: db_backup_destination_discovery.yml
#   - assert: { that: backup_destination_id is defined }

#   - name: 'Enable automatic database backups'
#     oci_database_database:
#       database_id: '{{ database_id }}'
#       db_backup_config:
#         auto_backup_enabled: '{{ auto_backup_enabled }}'
#         auto_backup_window: '{{ auto_backup_window }}'
#         recovery_window_in_days: '{{ recovery_window_in_days }}'
#         backup_destination_details:
#         - id: '{{ backup_destination_id }}'
#           type: '{{ backup_destination_type }}'
#     register: 'enable_exacc_auto_backup_result'
#   - debug:
#       msg: '{{ enable_exacc_auto_backup_result }}'
#   when: exadata_type is defined and exadata_type == 'exacc'

# - block:
#   - name: 'Enable automatic database backups for ExaCS'
#     oci_database_database:
#       database_id: '{{ database_id }}'
#       db_backup_config:
#         auto_backup_enabled: '{{ auto_backup_enabled }}'
#         auto_backup_window: '{{ auto_backup_window }}'
#         recovery_window_in_days: '{{ recovery_window_in_days }}'
#     register: 'enable_exacs_auto_backup_result'
#   - debug:
#       msg: '{{ enable_exacs_auto_backup_result }}'
#   when: exadata_type is defined and exadata_type == 'exacs'
  
